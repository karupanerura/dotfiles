[include]
    path = .gitconfig.local
[core]
    editor = emacsclient -nw
    pager  = lv
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
    excludesfile = ~/.gitignore
[color]
    ui = always
    branch = auto
    diff = auto
    status = auto
    interactive = auto
    grep = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[init]
    templatedir = ~/.git.template
[branch]
    autosetupmerge = false
    autosetuprebase = always
[rebase]
    stat = true
[merge]
    stat = true
    ff   = false
[merge "mergepbx"]
    name = XCode project files merger
    driver = ~/local/bin/mergepbx %O %A %B
[alias]
    list-alias          = "!git config --list | perl -F\\\\. -ane 'printf \"%-20s%s\", split \"=\", join(\".\", @F[1..@F-1]), 2 if $F[0] eq \"alias\"'"
    st                  = status
    ci                  = commit
    br                  = branch
    co                  = checkout
    co-hist-peco        = "!git checkout `git history -n50 | sort | uniq -c | sort -nr | awk '{print $2}' | peco`"
    df                  = diff
    dfc                 = diff --cached
    dw                  = diff -w --word-diff
    dwc                 = diff -w --word-diff --cached
    lg                  = log -p
    url                 = config --get remote.origin.url
    tree                = log --graph --pretty='format:%C(yellow)%h%Creset %s %Cgreen(%an)%Creset %Cred%d%Creset'
    wt                  = whatchanged --stat
    edit-unmerged       = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; emacs `f`"
    add-unmerged        = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
    ck                  = "!git --no-pager diff --diff-filter=ACMRX --name-only --no-color HEAD | egrep '\\.(t|p([lm]|sgi))$' | xargs -n 1 -P2 perl -wc"
    fetch-pulls         = fetch origin +refs/pull/*:refs/remotes/pull/*
    fetch-all           = "!find ~/project -maxdepth 3 -name .git -type d | xargs -P3 -n1 -I% git --git-dir=% fetch"
    branch-name         = rev-parse --abbrev-ref HEAD
    cv                  = "!f() { git cherry \"$@\" | perl -ane 'print $F[0], \" \", `git --no-pager show --date=short --no-notes --pretty=\"%h %Cgreen%cd %Cblue%cn%x09%Creset%s\" -s $F[1]`' ; }; f"
    new-branch          = "!f() { BRANCH_NAME=$1; git fetch && git co -b $BRANCH_NAME origin/master && git push -u origin $BRANCH_NAME; }; f"
    bk                  = back
    hist                = history
    log-ticket-id       = "!f() { git log --format=%s \"$@\" | perl -ne 'print if /refs #([0-9]+)/ && $tid != $1 and $tid = $1' | head -n10 ; }; f \"$@\""
    rollback-typechange = "!git diff --name-only --diff-filter=T \"$@\" | xargs git co --"
    force-unlock        = "!git rev-parse --is-inside-work-tree > /dev/null && rm -i `git rev-parse --show-toplevel`/.git/index.lock"
[push]
    default = current
[pull]
    rebase = true
[rerere]
    enabled = true
[grep]
    lineNumber = true
[help]
    autocorrect = 1
[github]
    user = karupanerura
[pager]
    log  = diff-highlight | lv
    show = diff-highlight | lv
    diff = diff-highlight | lv